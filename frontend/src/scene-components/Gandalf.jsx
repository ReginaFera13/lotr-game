/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 Gandalf.gltf 
Author: Aiden Studios (https://sketchfab.com/aidenstudios)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/whispering-wizard-animated-b14d316dd0554230af8fe930f2a8fc8c
Title: Whispering Wizard (Animated)
*/

import { useRef, useContext } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import axios from "axios"
import { GameContext } from '../pages/AGamePage';




export default function Gandalf(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/Gandalf.gltf')
  const { actions } = useAnimations(animations, group)
  const { gameID, fetchSubquests } = useContext(GameContext);

  const handleClick = async () => {
    console.log('Gandalf clicked!')
    try {
      const response = await axios.get(`http://127.0.0.1:8000/api/v1/game_subquests/?game_id=${gameID}`);
      const questData = response.data;
      console.log(questData)
      if (questData[0].completed == false) {
        const data = { completed: true }
        const subquestResponse = await axios.put(`http://127.0.0.1:8000/api/v1/game_subquests/${questData[0].id}/`, data)
        console.log('Quest completed:', subquestResponse.data)
        fetchSubquests()
      }
    } catch (error) {
      console.error("Error completing quests:", error);
    }
  }

  return (
    <group ref={group} {...props} dispose={null} scale={.55} position={[23,0,23]} rotation={[0,-3,0]} onClick={handleClick}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="8cee5280cf03454d990e9bbc9c60552dfbx" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
            <group name="Object_2">
              <group name="RootNode">
                <group name="Eyes001" />
                <group name="Eyes" />
                <group name="Beard" />
                <group name="Hands001" />
                <group name="Hands" />
                <group name="Hat" />
                <group name="Head" />
                <group name="Body" />
                <group name="root" rotation={[-Math.PI / 2, 0, 0]}>
                  <group name="Object_13">
                    <primitive object={nodes._rootJoint} />
                    <group name="Object_15" />
                    <group name="Object_17" />
                    <group name="Object_19" />
                    <group name="Object_21" />
                    <group name="Object_23" />
                    <group name="Object_25" />
                    <group name="Object_27" />
                    <group name="Object_29" />
                    <skinnedMesh name="Object_16" geometry={nodes.Object_16.geometry} material={materials.Sphere} skeleton={nodes.Object_16.skeleton} />
                    <skinnedMesh name="Object_18" geometry={nodes.Object_18.geometry} material={materials.Sphere_1} skeleton={nodes.Object_18.skeleton} />
                    <skinnedMesh name="Object_20" geometry={nodes.Object_20.geometry} material={materials.Beard} skeleton={nodes.Object_20.skeleton} />
                    <skinnedMesh name="Object_22" geometry={nodes.Object_22.geometry} material={materials.Box_2} skeleton={nodes.Object_22.skeleton} />
                    <skinnedMesh name="Object_24" geometry={nodes.Object_24.geometry} material={materials.Box_1} skeleton={nodes.Object_24.skeleton} />
                    <skinnedMesh name="Object_26" geometry={nodes.Object_26.geometry} material={materials.material} skeleton={nodes.Object_26.skeleton} />
                    <skinnedMesh name="Object_28" geometry={nodes.Object_28.geometry} material={materials.Sphere_2} skeleton={nodes.Object_28.skeleton} />
                    <skinnedMesh name="Object_30" geometry={nodes.Object_30.geometry} material={materials.material_7} skeleton={nodes.Object_30.skeleton} />
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/Gandalf.gltf')
